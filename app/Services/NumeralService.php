<?php
namespace App\Services;

class NumeralService
{

	public static function numeralToWords($input) {
	    // Базовый словарь числительных
	    $numbers = [
			0 => 'ноль',
	        1 => 'один',
	        2 => 'два',
	        3 => 'три',
	        4 => 'четыре',
	        5 => 'пять',
	        6 => 'шесть',
	        7 => 'семь',
	        8 => 'восемь',
	        9 => 'девять',
	        10 => 'десять',
	        11 => 'одиннадцать',
	        12 => 'двенадцать',
	        13 => 'тринадцать',
	        14 => 'четырнадцать',
	        15 => 'пятнадцать',
	        16 => 'шестнадцать',
	        17 => 'семнадцать',
	        18 => 'восемнадцать',
	        19 => 'девятнадцать',
	        20 => 'двадцать',
	        30 => 'тридцать',
	        40 => 'сорок',
	        50 => 'пятьдесят',
	        60 => 'шестьдесят',
	        70 => 'семьдесят',
	        80 => 'восемьдесят',
	        90 => 'девяносто',
	        100 => 'сто',
	        200 => 'двести',
	        300 => 'триста',
	        400 => 'четыреста',
	        500 => 'пятьсот',
	        600 => 'шестьсот',
	        700 => 'семьсот',
	        800 => 'восемьсот',
	        900 => 'девятьсот',
	        1000 => 'тысяча',
	        2000 => 'две тысячи'
	    ];

	    // Распознавание и разбор входной строки
	    if (preg_match('/(\d+)\s(года|году|год|января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)/', $input, $matches)) {
	        $number = intval($matches[1]);
	        $word = $matches[2];

	        // Разбиение числа на разряды
	        $units = $number % 10;
	        $tens = (int)($number % 100 / 10) * 10;
	        $hundreds = (int)($number % 1000 / 100) * 100;

	        // Формирование словесного представления
	        $words = [];
	        if ($hundreds) $words[] = $numbers[$hundreds];
	        if ($tens) $words[] = $numbers[$tens];
	        if ($units) $words[] = $numbers[$units];

	        // Добавление падежа в зависимости от контекста
			switch ($word) {
			    case 'год':
			        // Логика для "год"
			        $words[] = self::getYearCase($units, 'nominative');
			        break;
			    case 'году':
			        // Логика для "году"
			        $words[] = self::getYearCase($units, 'dative');
			        break;
			    case 'года':
			        // Логика для "года"
			        $words[] = self::getYearCase($units, 'genitive');
			        break;
			    // Добавление логики для месяцев
			    default:
			        // Можно добавить специфическую логику для месяцев, если это необходимо
			        break;
			}

	        return implode(' ', $words) . " $word";
	    }

	    return $input;
	}



	public static function numeralToWords($input)
	{
	    // Базовый словарь числительных
	    $numbers = [
			0 => 'ноль',
	        1 => 'один',
	        2 => 'два',
	        3 => 'три',
	        4 => 'четыре',
	        5 => 'пять',
	        6 => 'шесть',
	        7 => 'семь',
	        8 => 'восемь',
	        9 => 'девять',
	        10 => 'десять',
	        11 => 'одиннадцать',
	        12 => 'двенадцать',
	        13 => 'тринадцать',
	        14 => 'четырнадцать',
	        15 => 'пятнадцать',
	        16 => 'шестнадцать',
	        17 => 'семнадцать',
	        18 => 'восемнадцать',
	        19 => 'девятнадцать',
	        20 => 'двадцать',
	        30 => 'тридцать',
	        40 => 'сорок',
	        50 => 'пятьдесят',
	        60 => 'шестьдесят',
	        70 => 'семьдесят',
	        80 => 'восемьдесят',
	        90 => 'девяносто',
	        100 => 'сто',
	        200 => 'двести',
	        300 => 'триста',
	        400 => 'четыреста',
	        500 => 'пятьсот',
	        600 => 'шестьсот',
	        700 => 'семьсот',
	        800 => 'восемьсот',
	        900 => 'девятьсот',
	        1000 => 'тысяча',
	        2000 => 'две тысячи'
	    ];


	    // Распознавание и разбор входной строки
	    if (preg_match('/(\d+)\s(года|году|год|января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)/', $input, $matches)) {
	        $number = intval($matches[1]);
	        $word = $matches[2];

	        // Разбиение числа на разряды
	        $thousands = (int)($number / 1000) * 1000;
	        $hundreds = (int)(($number % 1000) / 100) * 100;
	        $tensAndUnits = $number % 100;

	        // Формирование словесного представления
	        $words = [];
	        if ($thousands) $words[] = self::convertNumber($thousands);
	        if ($hundreds) $words[] = self::convertNumber($hundreds);
	        if ($tensAndUnits) $words[] = self::convertNumber($tensAndUnits);

	        // Добавление падежа в зависимости от контекста
	        // ...

	        return implode(' ', $words) . " $word";
	    }

	    return $input;
	}



	public static function getYearCase($number, $case) {
	    // Функция для определения падежа числительного для слова "год"
	    switch ($case) {
	        case 'nominative':
	            // Номинативный падеж (Именительный)
	            return self::getNominativeCase($number);
	        case 'dative':
	            // Дательный падеж
	            return self::getDativeCase($number);
	        case 'genitive':
	            // Родительный падеж
	            return self::getGenitiveCase($number);
	        // Добавьте здесь другие падежи, если необходимо
	        default:
	            return '';
	    }
	}


	public static function getNominativeCase($number)
	{
	    // Логика для номинативного падежа (Именительный)
	    $nominativeCases = [
	        1 => 'первый', 2 => 'второй', 3 => 'третий', 4 => 'четвертый',
	        5 => 'пятый', 6 => 'шестой', 7 => 'седьмой', 8 => 'восьмой', 9 => 'девятый'
	    ];

	    return $nominativeCases[$number] ?? '';
	}

	public static function getDativeCase($number)
	{
	    // Логика для дательного падежа
	    $dativeCases = [
	        1 => 'первому', 2 => 'второму', 3 => 'третьему', 4 => 'четвертому',
	        5 => 'пятому', 6 => 'шестому', 7 => 'седьмому', 8 => 'восьмому', 9 => 'девятому'
	    ];

	    return $dativeCases[$number] ?? '';
	}

	public static function getGenitiveCase($number)
	{
	    // Логика для родительного падежа
	    $genitiveCases = [
	        1 => 'первого', 2 => 'второго', 3 => 'третьего', 4 => 'четвертого',
	        5 => 'пятого', 6 => 'шестого', 7 => 'седьмого', 8 => 'восьмого', 9 => 'девятого'
	    ];

	    return $genitiveCases[$number] ?? '';
	}




}
